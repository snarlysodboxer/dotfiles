set nocompatible

set shell=/bin/bash

if filereadable(expand("~/.vimrc.bundles"))
  source ~/.vimrc.bundles
endif

syntax          on " Enable syntax highlighting
filetype        on " Enable filetype detection
filetype indent on " Enable filetype-specific indenting
filetype plugin on " Enable filetype-specific plugins
set ic             " Case insensitive search
set hls            " Highlight search
set showmatch      " Show matching brackets

" Uncomment to use tabs instead of spaces:
" set shiftwidth=8
" set softtabstop=0
" set noexpandtab
" Two spaces instead of tabs:
" set shiftwidth=2
" set softtabstop=2
" set expandtab
" Four spaces instead of tabs:
set shiftwidth=4
set softtabstop=4
set expandtab

set autoindent
set tabstop=4
set number
set title
set backupdir=/tmp
"set t_Co=256
set background=dark
" colorscheme railscasts
colorscheme material
" colorscheme antares
" colorscheme VIvid
" colorscheme enigma
" colorscheme alduin
" colorscheme strange
" colorscheme znake
" colorscheme leo
" colorscheme lettuce
" colorscheme pride
" colorscheme babymate256


" Allow backspacing over everything in insert mode
set backspace=indent,eol,start

" List all matches without completing, then each full match
set wildmode=longest,list
" Make tab completion for files/buffers act like bash
set wildmenu

" Set leader to space
let mapleader=" "

" Move around splits with <c-hjkl>
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l

" Clear the search buffer when hitting return
:nnoremap <CR> :nohlsearch<cr>

" Switch between files with leader-leader
nnoremap <leader><leader> <c-^>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" STATUS LINE
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
:set statusline=%<%f\ (%{&ft})\ %-4(%m%)%=%-19(%3l,%02c%03V%)

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" COMMAND-T MAPPINGS
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Open files with <leader>f
map <leader>f :CommandTFlush<cr>\|:CommandT<cr>
" Open files, limited to the directory of the current file, with <leader>gf
" This requires the %% mapping found below.
map <leader>gf :CommandTFlush<cr>\|:CommandT %%<cr>
cnoremap %% <C-R>=expand('%:h').'/'<cr>
map <leader>e :edit %%
map <leader>v :view %%

" Make the current window big, but leave others context
set winwidth=5
set winwidth=100
" We have to have a winheight bigger than we want to set winminheight. But if
" we set winheight to be huge before winminheight, the winminheight set will
" fail.
set winheight=7
set winminheight=7
set winheight=999

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" MULTIPURPOSE TAB KEY
" Indent if we're at the beginning of a line. Else, do completion.
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
function! InsertTabWrapper()
    let col = col('.') - 1
    if !col || getline('.')[col - 1] !~ '\k'
        return "\<tab>"
    else
        return "\<c-p>"
    endif
endfunction
inoremap <tab> <c-r>=InsertTabWrapper()<cr>
inoremap <s-tab> <c-n>

syntax match nonascii "[^\x00-\x7F]"
highlight nonascii guibg=Red ctermbg=124

" Include dashes when word searching
set isk+=-
" Toggle include dashes when word searching
nnoremap <expr> <leader>- ':set isk' . (index(split(&isk, ','), '-') == -1 ? '+' : '-') . '=-<cr>:set iskeyword?<cr>'

" Add spaces after comment delimiters by default
let g:NERDSpaceDelims = 1

" Use compact syntax for prettified multi-line comments
let g:NERDCompactSexyComs = 1

" Align line-wise comment delimiters flush left instead of following code indentation
let g:NERDDefaultAlign = 'left'

" \ 'path_maps': {'/path/to/code/in/container': '/path/to/code/on/host'},
" let g:vdebug_options = {
" \ 'break_on_open': 1,
" \ 'port': '9005',
" \ 'server': '',
" \ 'watch_window_style': 'compact'
" \ }

let b:ale_linters = {'go': ['gobuild', 'gofmt', 'golangci_lint', 'golint', 'gopls', 'gotype', 'govet']}

